<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【學習日誌】Bootstrap進階語法</title>
    <link href="/2022/04/27/2022-4-27-Bootstrap%E9%80%B2%E9%9A%8E%E8%AA%9E%E6%B3%95/"/>
    <url>/2022/04/27/2022-4-27-Bootstrap%E9%80%B2%E9%9A%8E%E8%AA%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="排版常用語法"><a href="#排版常用語法" class="headerlink" title="排版常用語法"></a>排版常用語法</h2><h3 id="在CSS中常用的margin-padding可用以下語法表示"><a href="#在CSS中常用的margin-padding可用以下語法表示" class="headerlink" title="在CSS中常用的margin,padding可用以下語法表示:"></a>在CSS中常用的margin,padding可用以下語法表示:</h3><p>property 設定:</p><p>m - 設定 margin 的類別<br>p - 設定 padding 的類別</p><p>sides 設定:</p><p>t - 設定 margin-top 或是 padding-top 的類別<br>b - 設定 margin-bottom 或是 padding-bottom 的類別<br>s - (start) 在 LTR 設定 margin-left 或是 padding-left， RTL 設定 margin-right 或是 padding-right<br>e - (end) 在 LTR 設定 margin-right or padding-right， RTL 設定 margin-left 或是 padding-left<br>x - 同時設定 *-left 和 *-right<br>y - 時設定 *-top 和 *-bottom<br>blank - 同時設定 margin 或 padding 在元素的四個邊緣</p><p>size 設定:</p><p>0 - 設定 margin 或是 padding 為 0<br>1 - (預設) 設定 margin 或是 padding 為 $spacer * .25<br>2 - (預設) 設定 margin 或是 padding 為 $spacer * .5<br>3 - (預設) 設定 margin 或是 padding 為 $spacer<br>4 - (預設) 設定 margin 或是 padding 為 $spacer * 1.5<br>5 - (預設) 設定 margin 或是 padding 為 $spacer * 3<br>auto - 設定 margin 為 auto</p><h3 id="flex-相關"><a href="#flex-相關" class="headerlink" title="flex 相關"></a>flex 相關</h3><p>.flex-row 設定水平的方向(瀏覽器預設值)<br>.flex-row-reverse 作水平方向的反轉<br>.flex-column 設置垂直方向<br>.flex-column-reverse 作垂直方向的反轉。<br>.justify-content 改變 flex 物件在主軸上的對齊(x 軸開始，如果 flex-direction: column 則為 y 軸)</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><br>.justify-content-start<br>.justify-content-end<br>.justify-content-center<br>.justify-content-between<br>.justify-content-around<br>.justify-content-evenly<br><br></code></pre></td></tr></table></figure><p>.align-items 改變橫軸上 flex 物件的對齊 (y 軸開始，如果設定 flex-direction: column 則為 x 軸)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>.align-items-start<br>.align-items-end<br>.align-items-center<br>.align-items-baseline<br>.align-items-stretch<br><br></code></pre></td></tr></table></figure><p>.align-self 通用類別單獨改變在橫軸上的對齊 (y 軸開始，如果設定 flex-direction: column，則為 x 軸)<br>.flex-nowrap 完全不換行 (瀏覽器預設)<br>.flex-wrap 進行換行<br>.flex-wrap-reverse 進行反向換行</p><h3 id="中斷點"><a href="#中斷點" class="headerlink" title="中斷點"></a>中斷點</h3><p>Bootstrap 預設默認六個斷點（有時候會稱之為網格），主要用於建立響應式開發</p><p><img src="breakpoint.png"></p><p>其中比較常用的為 md(大部分手機板型) , lg(大部分桌面板型)</p><h2 id="響應式網頁製作通常以手機版為基準，再加入桌面版響應條件"><a href="#響應式網頁製作通常以手機版為基準，再加入桌面版響應條件" class="headerlink" title="響應式網頁製作通常以手機版為基準，再加入桌面版響應條件"></a>響應式網頁製作通常以手機版為基準，再加入桌面版響應條件</h2>]]></content>
    
    
    
    <tags>
      
      <tag>學習</tag>
      
      <tag>前端文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【學習日誌】Bootstrap常用語法</title>
    <link href="/2022/04/27/2022-4-27-Bootstrap%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/"/>
    <url>/2022/04/27/2022-4-27-Bootstrap%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="什麼是Bootstrap"><a href="#什麼是Bootstrap" class="headerlink" title="什麼是Bootstrap?"></a>什麼是Bootstrap?</h2><p>Bootstrap 是一個用於快速開發Web 應用程序和網站的前端框架，提供了包含HTML、CSS及JS等內容的框架。</p><h2 id="Bootstrap包含的內容"><a href="#Bootstrap包含的內容" class="headerlink" title="Bootstrap包含的內容"></a>Bootstrap包含的內容</h2><p>基本結構 ：Bootstrap提供了一個帶有網格系統、鏈接樣式、背景的基本結構。<br>CSS ：Bootstrap自帶以下特性：全局的CSS設置、定義基本的HTML元素樣式、可擴展的class，以及一個先進的網格系統。<br>組件 ：Bootstrap包含了十幾個可重用的組件，用於創建圖像、下拉菜單、導航、警告框、彈出框等等。<br>JavaScript插件 ：Bootstrap包含了十幾個自定義的jQuery插件。您可以直接包含所有的插件，也可以逐個包含這些插件。<br>定制 ：您可以定制Bootstrap的組件、LESS變量和jQuery插件來得到自己的版本。</p><h2 id="排版類語法整理"><a href="#排版類語法整理" class="headerlink" title="排版類語法整理"></a>排版類語法整理</h2><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><br>.lead：使段落突出顯示<br>.small：設定小文本(設置為父文本的85% 大小)<br>.text-left：設定文本左對齊<br>.text-center：設定文本居中對齊<br>.text-right：設定文本右對齊<br>.text-justify：設定文本對齊,段落中超出屏幕部分文字自動​​換行<br>.text-nowrap：段落中超出屏幕部分不換行<br>.text-lowercase：設定文本小寫<br>.text-uppercase：設定文本大寫<br>.text-capitalize：設定單詞首字母大寫<br>.initialism：顯示在&lt;abbr&gt; 元素中的文本以小號字體展示<br>.blockquote-reverse：設定引用右對齊<br>.list-unstyled：移除默認的列表樣式，列表項中左對齊( &lt;ul&gt; 和&lt;ol&gt; 中)。 這個類僅適用於直接子列表項(如果需要移除嵌套的列表項，你需要在嵌套的列表中使用該樣式)<br>.list-inline：將所有列表項放置同一行<br>.dl-horizo​​ntal：該類設置了浮動和偏移，應用於&lt;dl&gt; 元素和&lt;dt&gt; 元素中，具體實現可以查看實例<br>.pre-scrollable：使&lt;pre&gt; 元素可滾動scrollable<br><br></code></pre></td></tr></table></figure><h2 id="Bootstrap-表格"><a href="#Bootstrap-表格" class="headerlink" title="Bootstrap 表格"></a>Bootstrap 表格</h2><p>以下是Bootstrap 支持的一些表格元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><br>&lt;table&gt;：為表格添加基礎樣式。<br>&lt;thead&gt;：表格標題行的容器元素（&lt;<span class="hljs-built_in">tr</span>&gt;），用來標識表格列。<br>&lt;tbody&gt;：表格主體中的表格行的容器元素（&lt;<span class="hljs-built_in">tr</span>&gt;）。<br>&lt;<span class="hljs-built_in">tr</span>&gt;：一組出現在單行上的表格單元格的容器元素（&lt;td&gt; 或&lt;th&gt;）。<br>&lt;td&gt;：默認的表格單元格。<br>&lt;th&gt;：特殊的表格單元格，用來標識列或行（取決於範圍和位置）。必須在&lt;thead&gt; 內使用。<br>&lt;caption&gt;：關於表格存儲內容的描述或總結。<br>&lt;<span class="hljs-built_in">tr</span>&gt;, &lt;th&gt; 和&lt;td&gt; 類（下表語法可用於表格的行或者單元格）<br>.active：將懸停的顏色應用在行或者單元格上<br>.success：表示成功的操作<br>.info：表示信息變化的操作<br>.warning：表示一個警告的操作<br>.danger：表示一個危險的操作<br><br></code></pre></td></tr></table></figure><h2 id="基本的表格範例"><a href="#基本的表格範例" class="headerlink" title="基本的表格範例"></a>基本的表格範例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>&lt; table class = <span class="hljs-string">&quot; table &quot;</span> &gt; <br>  &lt; caption &gt; 基本的表格佈局 &lt;/ caption &gt; <br>  &lt; thead &gt; <br>    &lt; <span class="hljs-built_in">tr</span> &gt; <br>      &lt; th &gt; 品牌 &lt;/ th &gt; <br>      &lt; th &gt; 產品 &lt;/ th &gt; <br>    &lt;/ <span class="hljs-built_in">tr</span> &gt; <br>  &lt;/ thead &gt; <br>  &lt; tbody &gt; <br>    &lt; <span class="hljs-built_in">tr</span> &gt; <br>      &lt; td &gt; Apple &lt;/ td &gt; <br>      &lt; td &gt; Iphone7 &lt;/ td &gt; <br>    &lt;/ <span class="hljs-built_in">tr</span> &gt; <br>    &lt; <span class="hljs-built_in">tr</span> &gt; <br>      &lt; td &gt; 三星 &lt;/ td &gt; <br>      &lt; td &gt; Note9 &lt;/ td &gt; <br>    &lt;/ <span class="hljs-built_in">tr</span> &gt; <br>  &lt;/ tbody &gt; <br>&lt;/ table &gt;<br><br></code></pre></td></tr></table></figure><h2 id="Bootstrap圖片"><a href="#Bootstrap圖片" class="headerlink" title="Bootstrap圖片"></a>Bootstrap圖片</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>以下語法可用於圖片中<br>.img-rounded：為圖片添加圓角(IE8 不支持)<br>.img-circle：將圖片變為圓形(IE8 不支持)<br>.img-thumbnail：縮略圖功能<br>.img-responsive：圖片響應式(將擴展到父元素)<br>以下是有關於button的相關語法<br>.btn：為按鈕添加基本樣式<br>.btn-default：默認/標準按鈕<br>.btn-primary：原始按鈕樣式（未被操作）<br>.btn-success：表示成功的動作<br>.btn-info：該樣式可用於要彈出信息的按鈕<br>.btn-warning：表示需要謹慎操作的按鈕<br>.btn-danger：表示一個危險動作的按鈕操作<br>.btn-link：讓按鈕看起來像個鏈接(仍然保留按鈕行為)<br>.btn-lg：製作一個大按鈕<br>.btn-sm：製作一個小按鈕<br>.btn-xs：製作一個超小按鈕<br>.btn-block：塊級按鈕(拉伸至父元素100%的寬度)<br>.active：按鈕被點擊<br>.disabled：禁用按鈕<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>學習</tag>
      
      <tag>前端文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【學習日誌】javascript邏輯運算子 &amp;&amp; 和 ||</title>
    <link href="/2022/04/14/2022-4-13-javascript%E9%82%8F%E8%BC%AF%E9%81%8B%E7%AE%97/"/>
    <url>/2022/04/14/2022-4-13-javascript%E9%82%8F%E8%BC%AF%E9%81%8B%E7%AE%97/</url>
    
    <content type="html"><![CDATA[<p>&amp;&amp; 和 || 是寫出簡潔程式碼很好用的東西，最近學到頭有點痛，用這篇文章記錄整理一下&amp;&amp;和||的邏輯和用法。</p><h2 id="true-和-false-概念"><a href="#true-和-false-概念" class="headerlink" title="true 和 false 概念"></a>true 和 false 概念</h2><p>False就是你傳入Boolean()會回傳false的值</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">console.log(Boolean(<span class="hljs-literal">false</span>)) // <span class="hljs-literal">false</span><br>console.log(Boolean(0)) // <span class="hljs-literal">false</span><br>console.log(Boolean(‘’)) // <span class="hljs-literal">false</span><br>console.log(Boolean(null)) // <span class="hljs-literal">false</span><br>console.log(Boolean(undefined)) // <span class="hljs-literal">false</span><br>console.log(Boolean(NaN)) // <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>True則是會回傳true，所有不是false的都是true：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">console.log(Boolean(<span class="hljs-literal">true</span>)) // <span class="hljs-literal">true</span><br>console.log(Boolean(1)) // <span class="hljs-literal">true</span><br>console.log(Boolean(<span class="hljs-string">&#x27;Hello&#x27;</span>)) // <span class="hljs-literal">true</span><br>console.log(Boolean([1,2,3])) // <span class="hljs-literal">true</span><br>console.log(Boolean(&#123;name:<span class="hljs-string">&#x27;Johnny&#x27;</span>&#125;)) // <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>假設我今天要寫一個檢查元素的if…else判斷，通常最直觀的想法會這樣寫:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">const arr = []<br>console.log(arr.length) <br><span class="hljs-keyword">if</span> (arr.length&gt;0) &#123;<br>console.log(<span class="hljs-string">&#x27;陣列裡有東西&#x27;</span>)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>console.log(<span class="hljs-string">&#x27;空的陣列&#x27;</span>)<br>&#125; // 空的陣列<br></code></pre></td></tr></table></figure><p>如果利用到true&#x2F;false的概念 可以在第三行if條件中改寫成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> (arr.length)<br></code></pre></td></tr></table></figure><p>更進一步縮短還能改寫為</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">const arr = []<br>const message = arr.length ? <span class="hljs-string">&#x27;陣列裡有東西&#x27;</span> : <span class="hljs-string">&#x27;空的陣列&#x27;</span><br>console.log(message)<br></code></pre></td></tr></table></figure><h2 id="amp-amp-如何運作"><a href="#amp-amp-如何運作" class="headerlink" title="&amp;&amp; 如何運作"></a>&amp;&amp; 如何運作</h2><p>從左邊到右邊，回傳第一個是falsy的值，若全部皆為truthy，則回傳最後一個值。簡單舉例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">const number = 10 &amp;&amp; 50 &amp;&amp; 0 &amp;&amp; 3<br>console.log(number) // 因為0為從左到右第一個<span class="hljs-literal">false</span>值 所以number為0<br><br>const numberTwo = 10 &amp;&amp; 50 &amp;&amp; 100 &amp;&amp; 3<br>console.log(numberTwo) // 因為3為從左到右最後一個<span class="hljs-literal">true</span>值 所以numberTwo為3<br></code></pre></td></tr></table></figure><h2 id="如何運作"><a href="#如何運作" class="headerlink" title="|| 如何運作"></a>|| 如何運作</h2><p>基本上就是跟&amp;&amp;相反：從左邊到右邊，回傳第一個是truthy的值，若全部皆為falsy，則回傳最後一個值。簡單舉例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">const number = 1 || 2 || 3 <br>console.log(number) //number 因為第一個就是truthy了，直接回傳1<br>const numberTwo = 0 || 15 <br>console.log(numberTwo) //numberTwo第一個數字是0(falsy)，第二個數字15(truthy)，回傳1<br>const numberThree = 0 || undefined || null<br>console.log(numberThree) // numberThree全部都是falsy，回傳最後一個值null<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>學習</tag>
      
      <tag>前端文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【學習日誌】javascript基礎介紹</title>
    <link href="/2022/04/01/2022-4-1-javascript%E5%9F%BA%E7%A4%8E/"/>
    <url>/2022/04/01/2022-4-1-javascript%E5%9F%BA%E7%A4%8E/</url>
    
    <content type="html"><![CDATA[<h2 id="javascript資料型別"><a href="#javascript資料型別" class="headerlink" title="javascript資料型別"></a>javascript資料型別</h2><p>最新的 ECMAScript 標準定義了七種資料型別：</p><p>以下幾種算是最常見的資料型別</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">Boolean //布林<br><br>number //數字<br><br>string //字串 通常會以<span class="hljs-string">&quot;&quot;</span>或<span class="hljs-string">&#x27;&#x27;</span>或``包起來表示<br><br>Object //物件 於&#123;&#125;中，效果類似陣列<br><br></code></pre></td></tr></table></figure><p>另外還有</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">Null// 空值<br><br>undefine //有定義變數但無定義其屬性時會顯示<br><br></code></pre></td></tr></table></figure><h2 id="javascript宣告變數的三種方法"><a href="#javascript宣告變數的三種方法" class="headerlink" title="javascript宣告變數的三種方法"></a>javascript宣告變數的三種方法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">var //現較少用到 不常使用 <br><br><span class="hljs-built_in">let</span> //可於後續程式改變其值 <br><br>const //不可於後續程式改變其值 物件指向不會變時使用<br><br></code></pre></td></tr></table></figure><h2 id="javascript內容字串穿插不同型別的2種方法"><a href="#javascript內容字串穿插不同型別的2種方法" class="headerlink" title="javascript內容字串穿插不同型別的2種方法"></a>javascript內容字串穿插不同型別的2種方法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">let</span> myName =<span class="hljs-string">&quot;Tom&quot;</span>;<br><span class="hljs-built_in">let</span> myAge = 18;<br><span class="hljs-built_in">let</span> content = <span class="hljs-string">&quot;您好我是&quot;</span>+myName+<span class="hljs-string">&quot;，我今年&quot;</span>+myAge+<span class="hljs-string">&quot;歲&quot;</span> //原版用法<br><span class="hljs-built_in">let</span> content = `您好我是<span class="hljs-variable">$&#123;myName&#125;</span>，我今年<span class="hljs-variable">$&#123;myAge&#125;</span>歲` //ES6新增的用法<br><br></code></pre></td></tr></table></figure><h2 id="一些特殊用法"><a href="#一些特殊用法" class="headerlink" title="一些特殊用法"></a>一些特殊用法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">myEmail=myEmail.trim() //除去空白字元<br>length=myEmail.length //計算字元長度<br>typeof name //查資料型別<br><br></code></pre></td></tr></table></figure><h2 id="陣列操作"><a href="#陣列操作" class="headerlink" title="陣列操作"></a>陣列操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">let</span> math =[1,<span class="hljs-string">&quot;two&quot;</span>,3]<br><br><br>math[x] //x填入的數字代表陣列中第幾項，陣列由第[0]項開始算<br>math.length //陣列長度<br>math[3]=<span class="hljs-string">&quot;four&quot;</span> //寫入第4筆資料為<span class="hljs-string">&quot;four&quot;</span>，中間項目若沒填則自動填入空資料<br>math.push(<span class="hljs-string">&quot;four&quot;</span>) //在陣列後方塞入第4筆資料<span class="hljs-string">&quot;four&quot;</span><br>math.unshift(<span class="hljs-string">&quot;zero&quot;</span>) //在陣列前方塞入新的第1筆資料<span class="hljs-string">&quot;zero&quot;</span><br>math.pop(<span class="hljs-string">&quot;four&quot;</span>) //在陣列刪除最後一筆資料<span class="hljs-string">&quot;four&quot;</span><br>math.shift(<span class="hljs-string">&quot;zero&quot;</span>) //在陣列刪除第1筆資料<span class="hljs-string">&quot;zero&quot;</span><br>math.splice(2,3) //在陣列[2]的位置刪除往後數3筆資料<br>math.forEach(<span class="hljs-keyword">function</span>(item,index,array) &#123;<br>    <br>&#125;); //陣列資料個別處理 item:資料,index:位於陣列中第幾筆,array:列出陣列<br>math.filter(<span class="hljs-keyword">function</span>(item,index,array) &#123;<br>    <br>&#125;); //陣列資料個別處理 item:資料,index:位於陣列中第幾筆,array:列出陣列 filter/find:篩選多筆/第一筆<br><br></code></pre></td></tr></table></figure><h2 id="物件"><a href="#物件" class="headerlink" title="物件"></a>物件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-built_in">let</span> mom =<span class="hljs-string">&quot;Kiara&quot;</span> <br><span class="hljs-built_in">let</span> dad = <span class="hljs-string">&quot;Calliope&quot;</span><br><span class="hljs-built_in">let</span> childs = 3;<br><br><span class="hljs-built_in">let</span> home=&#123;<br>    mom,<br>    dad,<br>    childs<br>&#125;  //宣告物件所包含的元素<br><br>console.log(home)<br>console.log(home.childs) or  home[<span class="hljs-string">&#x27;childs&#x27;</span>] //找物件裡的屬性<br>home.friends =<span class="hljs-string">&quot;Ame&quot;</span> or home[<span class="hljs-string">&#x27;friends&#x27;</span>] =<span class="hljs-string">&quot;Ame&quot;</span> // 在home物件新增一個屬性friends並賦予一個值<span class="hljs-string">&quot;Ame&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="函式"><a href="#函式" class="headerlink" title="函式"></a>函式</h2><p>補充說明:函式裡變數的作用域僅在函式內部，若內部無指定的變數會自動向外查找。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">function</span> work(x)&#123;<br>    var x = 1;<br>    <span class="hljs-built_in">return</span> something x;<br>&#125; //函示陳述式 會於程式一開始拉出來執行<br>const work = <span class="hljs-keyword">function</span>(x)&#123;<br>    var x = 1;<br>    <span class="hljs-built_in">return</span> x*x;<br>&#125;or<br>const work = (x) =&gt;&#123;<br>    var x = 1;<br>    <span class="hljs-built_in">return</span> x*x;<br>&#125;or<br>const work = x =&gt; <span class="hljs-built_in">return</span> x*x //函式表達式 箭頭函式若只有一參數可省略() 不會於程式一開始拉出來執行<br></code></pre></td></tr></table></figure><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">const el = document.querySelector(<span class="hljs-string">&#x27;h1&#x27;</span>); //使用<span class="hljs-string">&#x27;CSS 選擇器&#x27;</span>選取網頁上的元素 h1<br>el.textContent = <span class="hljs-string">&quot;Hello World!!&quot;</span> //覆蓋一個text上去h1<br>main.innerHTML = `&lt;h1 class=<span class="hljs-string">&quot;header&quot;</span>&gt;標題&lt;/h1&gt;`; //在main class裡刪掉資料並貼上&lt;h1 class=<span class="hljs-string">&quot;header&quot;</span>&gt;標題&lt;/h1&gt;<br>Link.setAttribute(<span class="hljs-string">&quot;class&quot;</span>,<span class="hljs-string">&quot;red&quot;</span>); //在Link裡增加一個class為red<br>Link.getAttribute(<span class="hljs-string">&quot;class&quot;</span>); //在Link裡找一個class的值<br></code></pre></td></tr></table></figure><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">btn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>,<span class="hljs-keyword">function</span>(e)&#123;<br>    console.log(<span class="hljs-string">&#x27;典籍了&#x27;</span>);<br>&#125;) <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>學習</tag>
      
      <tag>前端文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【學習日誌】jQuery重要語法</title>
    <link href="/2022/03/30/2022-3-30-jQuery%E9%87%8D%E8%A6%81%E8%AA%9E%E6%B3%95/"/>
    <url>/2022/03/30/2022-3-30-jQuery%E9%87%8D%E8%A6%81%E8%AA%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>紀錄jQuery常見語法</p><h2 id="jQuery介紹"><a href="#jQuery介紹" class="headerlink" title="jQuery介紹"></a>jQuery介紹</h2><p>jQuery基本格式</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$(document).ready(<span class="hljs-function"><span class="hljs-title">function</span></span>() &#123;<br>  $(<span class="hljs-string">&quot;要互動的元素&quot;</span>).click(<span class="hljs-keyword">function</span>(event) &#123;<br>  <span class="hljs-string">&quot;要藉由此元素觸發的事件&quot;</span><br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="取消預設效果"><a href="#取消預設效果" class="headerlink" title="取消預設效果"></a>取消預設效果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$().preventDefault();<br></code></pre></td></tr></table></figure><h3 id="套用至本身元素"><a href="#套用至本身元素" class="headerlink" title="套用至本身元素"></a>套用至本身元素</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$(this).event();<br></code></pre></td></tr></table></figure><h3 id="找父階元素"><a href="#找父階元素" class="headerlink" title="找父階元素"></a>找父階元素</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$().parent();<br></code></pre></td></tr></table></figure><h3 id="找同層其他元素"><a href="#找同層其他元素" class="headerlink" title="找同層其他元素"></a>找同層其他元素</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$().sibling();<br></code></pre></td></tr></table></figure><h3 id="找子元素內容"><a href="#找子元素內容" class="headerlink" title="找子元素內容"></a>找子元素內容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$().find();<br></code></pre></td></tr></table></figure><h3 id="雜項"><a href="#雜項" class="headerlink" title="雜項"></a>雜項</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$().on(); //持續監聽物件,事件<br>$().click(); //點擊事件<br>$().delay(<span class="hljs-string">&quot;時間&quot;</span>); //延遲效果 <br>$().slidetoggle(); //(Up/Down)自動選擇展開/收起<br>$().stop(); //中斷效果<br>$().attr(<span class="hljs-string">&#x27;要增加的標籤&#x27;</span>,<span class="hljs-string">&#x27;增加的內容&#x27;</span>); //動態增加HTML標籤屬性<br>$().toggleclass(); //自動判斷新增或移除class<br>$().remove(); //刪除內容<br></code></pre></td></tr></table></figure><p>Q：關於 .css() 跟.attr() 還有 toggleClasss() 的用法，使用時機？</p><p>A：css() 主要是可以直接調整 CSS 樣式，不需要新增 class ；而 .attr() 則是要修改 href 、 src 、 title 等等的屬性值時，就需要使用 .attr()</p><p>toggleClasss() 則是會用在控制一個 class 新增或移除，去調整原本元素的 CSS 樣式</p><p>其他可參考jQuery辭典及關鍵字: (<a href="https://oscarotero.com/jquery/">https://oscarotero.com/jquery/</a>)<br><img src="jQueryKeyword.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>學習</tag>
      
      <tag>前端文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【知識推廣】一輩子文組也能看懂的電腦介紹</title>
    <link href="/2022/03/30/2022-3-30-%E9%9B%BB%E8%85%A6%E5%90%84%E5%85%83%E4%BB%B6%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/"/>
    <url>/2022/03/30/2022-3-30-%E9%9B%BB%E8%85%A6%E5%90%84%E5%85%83%E4%BB%B6%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/</url>
    
    <content type="html"><![CDATA[<p>來介紹一下電腦各元件在幹嘛，但是我又懶得打字<br>這些影片講得蠻清楚的推薦一下<br>其實電腦元件真的不難懂，加減學個知識也可以避免自己或親友當接盤俠</p><h2 id="電腦各元件的功能"><a href="#電腦各元件的功能" class="headerlink" title="電腦各元件的功能"></a>電腦各元件的功能</h2><p><div class="video-container"><iframe src="https://www.youtube.com/embed/KBNYqMNdmyw" frameborder="0" loading="lazy" allowfullscreen></iframe></div><br><div class="video-container"><iframe src="https://www.youtube.com/embed/EZzhAxGUa6w" frameborder="0" loading="lazy" allowfullscreen></iframe></div></p><h2 id="How-2-組裝"><a href="#How-2-組裝" class="headerlink" title="How 2 組裝"></a>How 2 組裝</h2><p><div class="video-container"><iframe src="https://www.youtube.com/embed/u6CpnuVEbGQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div><br><div class="video-container"><iframe src="https://www.youtube.com/embed/iWdPhtpOMIc" frameborder="0" loading="lazy" allowfullscreen></iframe></div></p>]]></content>
    
    
    
    <tags>
      
      <tag>硬體</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【學習日誌】使用 Hexo + GitHub Pages 架設個人網誌</title>
    <link href="/2022/03/27/2022-3-27-Hexo%E6%9E%B6%E8%A8%AD%E5%80%8B%E4%BA%BA%E7%B6%B2%E7%AB%99/"/>
    <url>/2022/03/27/2022-3-27-Hexo%E6%9E%B6%E8%A8%AD%E5%80%8B%E4%BA%BA%E7%B6%B2%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<p>本篇主要介紹如何使用 Hexo 並搭配 GitHub 來快速架設網誌。<br>從介紹什麼是 Hexo 框架，該如何安裝、建立環境，接著介紹一些常用指令，以及如何部署到 GitHub 上。<br>這個部落格就是使用到Hexo來架設的</p><h2 id="Hexo介紹"><a href="#Hexo介紹" class="headerlink" title="Hexo介紹"></a>Hexo介紹</h2><p>Hexo 其實就是一個基於 Node.js 開發的網誌框架，具有下列幾項特點，推薦新手可以使用：<br>–編譯速度非常快<br>–能夠支援 Markdown 語法解析文章，並透過主題渲染靜態檔案<br>–具有豐富的外掛套件<br>–支援一鍵部署</p><h3 id="Hexo環境建立"><a href="#Hexo環境建立" class="headerlink" title="Hexo環境建立"></a>Hexo環境建立</h3><p>在欲建立環境的資料夾下用終端機打指令</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo init<br></code></pre></td></tr></table></figure><h3 id="新增文章"><a href="#新增文章" class="headerlink" title="新增文章"></a>新增文章</h3><p>可選擇打以下指令或自己在_posts資料夾下新增md檔</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><h3 id="於本機伺服器預覽"><a href="#於本機伺服器預覽" class="headerlink" title="於本機伺服器預覽"></a>於本機伺服器預覽</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br>or<br>$ hexo s<br></code></pre></td></tr></table></figure><h2 id="部屬網站"><a href="#部屬網站" class="headerlink" title="部屬網站"></a>部屬網站</h2><p>請先在_config.yml裡找到以下資訊並複製貼上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: git@github.com:<span class="hljs-string">&quot;你的github名稱&quot;</span>/<span class="hljs-string">&quot;你的github reposity名稱&quot;</span>.git //儲存庫路徑<br>  branch: gh-pages or main<span class="hljs-string">&quot;如果是建立在根目錄才填main&quot;</span><br></code></pre></td></tr></table></figure><h3 id="安裝hexo-cli"><a href="#安裝hexo-cli" class="headerlink" title="安裝hexo cli"></a>安裝hexo cli</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h3 id="靜態網站產生-需安裝hexo指令工具"><a href="#靜態網站產生-需安裝hexo指令工具" class="headerlink" title="靜態網站產生 需安裝hexo指令工具"></a>靜態網站產生 需安裝hexo指令工具</h3><p>打完指令後會在本機資料夾<br>生成靜態網站資料夾public</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br>or<br>$ hexo g<br></code></pre></td></tr></table></figure><h3 id="部屬網站-需安裝hexo指令工具"><a href="#部屬網站-需安裝hexo指令工具" class="headerlink" title="部屬網站 需安裝hexo指令工具"></a>部屬網站 需安裝hexo指令工具</h3><p>部屬到於_config.yml填入的線上伺服器<br>通常多是github</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy <br>or<br>$ hexo d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>學習</tag>
      
      <tag>前端文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
